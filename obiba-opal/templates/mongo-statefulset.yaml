{{- if .Values.mongo.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.mongo.name }}
spec:
  serviceName: {{ .Values.mongo.name }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.mongo.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.mongo.name }}
    spec:
      containers:
        - name: mongo
          image: {{ .Values.mongo.image }}
          ports:
            - containerPort: {{ .Values.mongo.port | default "27017" }}
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
          {{- if or .Values.mongo.existingSecret .Values.global.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.existingSecret | default .Values.global.existingSecret }}
                  key: {{ .Values.mongo.existingSecretKeys.user }}
          {{- else }}
              value: {{ .Values.mongo.user | quote }}
          {{- end }}
            - name: MONGO_INITDB_ROOT_PASSWORD
          {{- if or .Values.mongo.existingSecret .Values.global.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongo.existingSecret | default .Values.global.existingSecret }}
                  key: {{ .Values.mongo.existingSecretKeys.password }}
          {{- else }}
              value: {{ .Values.mongo.password | quote }}
          {{- end }}
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongo-storage
        labels:
          app: mongo
      spec:
        accessModes:
          - ReadWriteOnce
        {{- if .Values.global.storageClassName }}
        storageClassName: {{ .Values.global.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.mongo.pvcSize | default "1Gi" }}
{{- end }}