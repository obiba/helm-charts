namespace: default

nameOverride: "opal"

global:
  # Storage class for the PVC (leave empty for default storage class)
  storageClassName: ""
  # Existing secret for credentials
  existingSecret: ""

# Service account for the Rock spawner
# This is gives the permission to the Opal server to spawn new Rock containers
serviceAccount:
  name: rock-spawner-service-account

# MongoDB setup: apply MongoDB configuration to Opal
useMongo: true

# MongoDB configuration
mongo:
  # Enable internally managed MongoDB
  enabled: true
  name: mongo
  image: mongo:8.0
  pvcSize: 1Gi
  # Enable backup cronjob of internal or external MongoDB database
  backup:
    enabled: false
    schedule: "0 1 * * *" # This schedule runs the job daily at 1 AM.
    pvcSize: 2Gi
    limit: 10 # Number of backups to keep
  # MongoDB connection details (internal or external)
  host: mongo
  port: "27017"
  database: 
    data: mongo
    ids: ids
  user: root
  password: example
  existingSecret: ""  # Override global.existingSecret if needed
  existingSecretKeys:
    database: 
      data: MONGO_DATABASE
      ids: MONGO_IDS
    user: MONGO_USER
    password: MONGO_PASSWORD

# PostgreSQL setup: apply PostgreSQL configuration to Opal
usePostgres:
  data: false
  ids: false

# PostgreSQL configuration
postgres:
  data:
    # Enable internally managed PostgreSQL for data
    enabled: false
    name: postgres-data
    image: postgres:17-alpine
    pvcSize: 1Gi
    # Enable backup cronjob of internal or external PostgreSQL database
    backup:
      enabled: false
      schedule: "0 2 * * *" # This schedule runs the job daily at 2 AM.
      pvcSize: 2Gi
      limit: 10 # Number of backups to keep
    # PostgreSQL connection details (internal or external)
    host: postgres-data
    port: "5432"
    database: postgres
    user: postgres
    password: example
    existingSecret: ""  # Override global.existingSecret if needed
    existingSecretKeys:
      database: POSTGRESDATA_DATABASE
      user: POSTGRESDATA_USER
      password: POSTGRESDATA_PASSWORD
  ids:
    # Enable internally managed PostgreSQL for IDs
    enabled: false
    name: postgres-ids
    image: postgres:17-alpine
    pvcSize: 1Gi
    # Enable backup cronjob of internal or external PostgreSQL database
    backup:
      enabled: false
      schedule: "0 2 * * *" # This schedule runs the job daily at 2 AM.
      pvcSize: 2Gi
      limit: 10 # Number of backups to keep
    # PostgreSQL connection details (internal or external)
    host: postgres-ids
    port: "5432"
    database: postgres
    user: postgres
    password: example
    existingSecret: ""  # Override global.existingSecret if needed
    existingSecretKeys:
      database: POSTGRESIDS_DATABASE
      user: POSTGRESIDS_USER
      password: POSTGRESIDS_PASSWORD

# Opal configuration
opal:
  # Container image configuration
  image: obiba/opal:5.2
  imagePullPolicy: Always
  # Opal PVC size for persistent storage of configuration files and runtime work directory 
  pvcSize: 1Gi
  # Java options
  javaOpts: "-Xms1G -Xmx2G -XX:+UseG1GC"
  # Enable backup cronjob of Opal files
  backup:
    enabled: false
    schedule: "0 3 * * *" # This schedule runs the job daily at 3 AM.
    pvcSize: 2Gi
    limit: 10 # Number of backups to keep
  # Opal administrator password
  adminPassword:
    password: password
    existingSecret: ""  # Override global.existingSecret if needed
    secretKey: OPAL_ADMINISTRATOR_PASSWORD
  resources:
    # Requested resources at pod start  
    requests:
      memory: 1Gi
      cpu: "1"
    # Limits of the resources used by the pod
    limits:
      memory: 2Gi
      cpu: "2"
  rock:
    # Comma separated list of allowed Rock images
    imagesAllowed: ""
    # Default Rock container pods specifications
    specs:
      - id: default # Identifier of the R server profile, it is required to have at least a profile with the "default" name
        type: rock # Required
        # When enabled, Opal will use this specification to spawn new Rock containers
        enabled: true
        container:
            # Pod name prefix
            name: rock-default
            # Container image
            image: datashield/rock-base:latest
            # Container image pull policy
            imagePullPolicy: IfNotPresent
            # Container port (necessarily 8085 for Rock)
            port: 8085
            resources:
                # Requested resources at pod start
                requests:
                    cpu: 1000m
                    memory: 500Mi
                # Limits of the resources used by the pod
                limits:
                    cpu: 2000m
                    memory: 1Gi

# Ingress configuration
ingress:
  # Enable internally managed Ingress
  enabled: false
  # Ingress class name, e.g., "nginx"
  className: "nginx"
  # Ingress labels
  labels: {}
  # Extra annotations like cert-manager etc.
  annotations: {}
  hosts:
    - host: opal.local
      paths:
        - path: /
          pathType: Prefix
  # TLS configuration, e.g. for cert-manager
  tls: []
